################################################
# APPLICATION
################################################
server:
  port: 8085
app:
  kafka:
    topic: person
  metrics:
    timeout: 3000

################################################
# KAFKA CONSUMER
################################################
spring:
  kafka:
    listener:
      ack-mode: manual
    properties:
      schema.registry.url: http://localhost:8081
      specific.avro.reader: true
      allow.auto.create.topics: true
      request.timeout.ms: 3000
      retry.backoff.ms: 500
      reconnect.backoff.max.ms: 3000
    consumer:
      group-id: person-consumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      max-poll-records: 3000

################################################
# CONFIGURATION DATA SOURCE (MYSQL)
################################################
  datasource:
    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:dev}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 3000
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true

################################################
# METRICS / PROMETHEUS
################################################
info:
  app:
    name: @project.artifactId@
    description: @project.description@
    version: @project.version@"
    encoding: @project.build.sourceEncoding@"
    java:
      source: @java.version@"
      target: @java.version@"
    build:
      artifact: @project.artifactId@"
      group: @project.groupId@"
      version: @project.version@"

management:
  metrics:
    tags:
      application: "@project.artifactId@"
    enable:
      jvm: true
    distribution:
      sla:
        http:
          server:
            requests:
              - 50ms
              - 100ms
              - 200ms
              - 300ms
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include:
            - kafka
            - db
            - diskSpace
      logging:
        slow-indicator-threshold: 3s
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
          - metrics
          - prometheus
    jmx:
      exposure:
        include:
          - info
          - health
          - metrics
          - prometheus
  info:
    env:
      enabled: true